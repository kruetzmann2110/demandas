// ========================================
// PREPARAR ARQUIVOS PARA GITHUB
// Sistema de Demandas Governan√ßa TOP v2.0.0
// ========================================

const fs = require('fs');
const path = require('path');

console.log('üì¶ PREPARANDO ARQUIVOS PARA GITHUB...\n');

/**
 * Criar estrutura de releases no GitHub
 */
function prepararEstrutura() {
    const baseDir = __dirname;
    
    // Arquivos que devem ir para a pasta "releases" no GitHub
    const arquivosRelease = [
        {
            origem: path.join(baseDir, 'version.json'),
            destino: 'releases/versao.json'
        },
        {
            origem: path.join(baseDir, 'backend', 'server.js'),
            destino: 'releases/backend/server.js'
        },
        {
            origem: path.join(baseDir, 'web', 'js', 'app.js'),
            destino: 'releases/web/js/app.js'
        },
        {
            origem: path.join(baseDir, 'web', 'css', 'style.css'),
            destino: 'releases/web/css/style.css'
        },
        {
            origem: path.join(baseDir, 'web', 'index.html'),
            destino: 'releases/web/index.html'
        }
    ];

    console.log('üìã ESTRUTURA DE ARQUIVOS PARA O GITHUB:\n');
    console.log('üìÅ Reposit√≥rio: kruetzmann2110/demandas');
    console.log('üåø Branch: main');
    console.log('üìÇ Estrutura necess√°ria:\n');

    console.log('demandas/');
    console.log('‚îú‚îÄ‚îÄ README.md');
    console.log('‚îú‚îÄ‚îÄ releases/');
    console.log('‚îÇ   ‚îú‚îÄ‚îÄ versao.json');
    console.log('‚îÇ   ‚îú‚îÄ‚îÄ backend/');
    console.log('‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ server.js');
    console.log('‚îÇ   ‚îî‚îÄ‚îÄ web/');
    console.log('‚îÇ       ‚îú‚îÄ‚îÄ js/');
    console.log('‚îÇ       ‚îÇ   ‚îî‚îÄ‚îÄ app.js');
    console.log('‚îÇ       ‚îú‚îÄ‚îÄ css/');
    console.log('‚îÇ       ‚îÇ   ‚îî‚îÄ‚îÄ style.css');
    console.log('‚îÇ       ‚îî‚îÄ‚îÄ index.html');
    console.log('‚îî‚îÄ‚îÄ docs/');
    console.log('    ‚îî‚îÄ‚îÄ instalacao.md\n');

    console.log('üìÑ CONTE√öDO DOS ARQUIVOS:\n');

    // Verificar e mostrar arquivos
    arquivosRelease.forEach(arquivo => {
        if (fs.existsSync(arquivo.origem)) {
            const stats = fs.statSync(arquivo.origem);
            const tamanho = (stats.size / 1024).toFixed(1);
            console.log(`‚úÖ ${arquivo.destino} (${tamanho} KB)`);
        } else {
            console.log(`‚ùå ${arquivo.destino} - ARQUIVO N√ÉO ENCONTRADO`);
        }
    });

    return arquivosRelease;
}

/**
 * Criar arquivo README.md para o reposit√≥rio
 */
function criarReadme() {
    const readmeContent = `# Sistema de Demandas Governan√ßa TOP

üè¢ **Sistema de gest√£o de demandas com auto-atualiza√ß√£o via GitHub**

## üìã Descri√ß√£o

Sistema Node.js para gest√£o de demandas empresariais com:
- ‚úÖ Dashboard moderno e interativo
- üìä Ranking por categorias
- üìà Timeline de atividades
- üîÑ Auto-atualiza√ß√£o via GitHub
- üì± Interface responsiva

## üöÄ Instala√ß√£o

### Pr√©-requisitos
- Node.js 16+ instalado
- Acesso ao SQL Server (configurado)

### Passos de Instala√ß√£o

1. **Baixar o sistema**
   \`\`\`bash
   git clone https://github.com/kruetzmann2110/demandas.git
   cd demandas
   \`\`\`

2. **Instalar depend√™ncias**
   \`\`\`bash
   npm install express mssql
   \`\`\`

3. **Configurar banco de dados**
   - Editar \`backend/server.js\` com suas credenciais SQL Server

4. **Iniciar sistema**
   - Execute: \`INICIAR-COM-GITHUB.bat\`
   - Ou: \`node startup-with-updates.js\`

## üîÑ Auto-Atualiza√ß√£o

O sistema verifica automaticamente por atualiza√ß√µes neste reposit√≥rio GitHub a cada inicializa√ß√£o.

### Estrutura de Releases

Os arquivos de atualiza√ß√£o ficam na pasta \`releases/\`:
- \`releases/versao.json\` - Informa√ß√µes da vers√£o
- \`releases/backend/\` - Arquivos do servidor
- \`releases/web/\` - Arquivos do frontend

### Vers√£o Atual

**v2.0.0** - Sistema completo com dashboard e auto-update

## üìä Funcionalidades

- üìù **Gest√£o de Demandas**: Criar, editar e acompanhar demandas
- üìà **Dashboard**: Gr√°ficos e m√©tricas em tempo real
- üèÜ **Rankings**: Classifica√ß√£o por categorias (Op1, Ql2, An3...)
- üìÖ **Timeline**: Hist√≥rico completo de atividades
- üì§ **Export**: Exporta√ß√£o para Excel
- üîê **Seguran√ßa**: Autentica√ß√£o e controle de acesso

## üõ†Ô∏è Tecnologias

- **Backend**: Node.js + Express
- **Frontend**: HTML5 + CSS3 + JavaScript
- **Banco**: SQL Server
- **Auto-Update**: GitHub API

## üìû Suporte

Para suporte t√©cnico ou d√∫vidas:
- üìß Email: [seu-email]
- üêõ Issues: Abra uma issue neste reposit√≥rio

---

üîÑ **Auto-update ativo** - O sistema se atualiza automaticamente a partir deste reposit√≥rio.
`;

    console.log('\nüìÑ CONTE√öDO DO README.md:\n');
    console.log('=' .repeat(50));
    console.log(readmeContent);
    console.log('=' .repeat(50));

    return readmeContent;
}

/**
 * Mostrar comandos git necess√°rios
 */
function mostrarComandosGit() {
    console.log('\nüîß COMANDOS PARA CONFIGURAR O REPOSIT√ìRIO:\n');
    
    console.log('1Ô∏è‚É£ INICIALIZAR E ENVIAR PRIMEIRA VERS√ÉO:');
    console.log('git init');
    console.log('git add .');
    console.log('git commit -m "Initial commit - Sistema de Demandas v2.0.0"');
    console.log('git branch -M main');
    console.log('git remote add origin https://github.com/kruetzmann2110/demandas.git');
    console.log('git push -u origin main');
    
    console.log('\n2Ô∏è‚É£ PARA FUTURAS ATUALIZA√á√ïES:');
    console.log('git add .');
    console.log('git commit -m "Update v2.0.1 - [descri√ß√£o das mudan√ßas]"');
    console.log('git push');

    console.log('\n3Ô∏è‚É£ ESTRUTURA DE PASTAS NO GITHUB:');
    console.log('üìÅ Criar essas pastas no seu reposit√≥rio:');
    console.log('   ‚Ä¢ releases/');
    console.log('   ‚Ä¢ releases/backend/');
    console.log('   ‚Ä¢ releases/web/js/');
    console.log('   ‚Ä¢ releases/web/css/');
    console.log('   ‚Ä¢ docs/');
}

/**
 * Criar arquivo versao.json para o releases
 */
function criarVersaoJson() {
    const versaoContent = {
        version: "2.0.0",
        updated_at: new Date().toISOString(),
        changelog: "Vers√£o inicial com Dashboard, ranking por categoria, timezone corrigido e auto-update via GitHub",
        components: {
            backend: {
                version: "2.0.0",
                last_update: new Date().toISOString(),
                changes: ["Auto-update GitHub", "Timezone corrigido", "API categoria"]
            },
            frontend: {
                version: "2.0.0", 
                last_update: new Date().toISOString(),
                changes: ["Dashboard moderno", "Ranking por categoria", "Export Excel", "Gr√°ficos interativos"]
            }
        },
        requirements: {
            node_version: ">=16.0.0",
            database: "SQL Server com tabela demands atualizada",
            dependencies: ["express", "mssql"]
        },
        repository: {
            owner: "kruetzmann2110",
            repo: "demandas",
            branch: "main",
            folder: "releases"
        }
    };

    console.log('\nüìÑ CONTE√öDO DO releases/versao.json:\n');
    console.log('=' .repeat(50));
    console.log(JSON.stringify(versaoContent, null, 2));
    console.log('=' .repeat(50));

    return versaoContent;
}

// ‚úÖ EXECUTAR PREPARA√á√ÉO
if (require.main === module) {
    console.log('========================================');
    console.log('üì¶ PREPARA√á√ÉO PARA GITHUB');
    console.log('========================================\n');

    try {
        // 1. Verificar estrutura de arquivos
        const arquivos = prepararEstrutura();

        // 2. Mostrar README.md
        const readme = criarReadme();

        // 3. Mostrar versao.json
        const versao = criarVersaoJson();

        // 4. Mostrar comandos git
        mostrarComandosGit();

        console.log('\n‚úÖ PREPARA√á√ÉO CONCLU√çDA!');
        console.log('\nüìã PR√ìXIMOS PASSOS:');
        console.log('1. Criar as pastas no GitHub conforme mostrado acima');
        console.log('2. Fazer upload dos arquivos para as respectivas pastas');
        console.log('3. Testar com: node startup-with-updates.js --test');
        console.log('4. Iniciar sistema: INICIAR-COM-GITHUB.bat');

    } catch (error) {
        console.error('‚ùå Erro na prepara√ß√£o:', error.message);
        process.exit(1);
    }
}

module.exports = { prepararEstrutura, criarReadme, criarVersaoJson };